{"version":3,"sources":["assets/ArtWeather.png","weatherApp/weather.js","reportWebVitals.js","index.js"],"names":["API","WeatherApp","today","Date","useState","query","setQuery","weather","setWeather","className","alt","src","imgWeather","width","type","placeholder","aria-label","onChange","e","target","value","onKeyPress","searchEvent","key","fetch","then","response","json","result","console","log","main","name","sys","country","format","temp","humidity","wind","speed","colSpan","scope","coord","lat","lon","feels_like","temp_min","temp_max","clouds","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05f3a1d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ArtWeather.33df347c.png\";","import React, { useState } from 'react';\r\nimport './weather.css';\r\nimport imgWeather from '../assets/ArtWeather.png';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\n\r\nconst API = {\r\n    key:\"f7b0f3320abbc7dc0afdbbe8113c4f44\",\r\n    base: \"https://api.openweathermap.org/data/2.5/\"\r\n} \r\n\r\nfunction WeatherApp() {\r\n    const today = new Date();\r\n    const [query, setQuery] = useState('');\r\n    const [weather, setWeather] = useState({});\r\n\r\n    const search = searchEvent =>{\r\n        if(searchEvent.key === \"Enter\"){\r\n            fetch(`${API.base}weather?q=${query}&units=metric&APPID=${API.key}`)\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    setWeather(result);\r\n                    setQuery('');\r\n                    console.log(result);\r\n                }); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n    \r\n            <div className=\"img-cont\">\r\n                <img alt=\"img\" src={imgWeather} className=\"img-fluid\" width=\"100%\"/>\r\n                <h2 className=\"centered\">WEATHER 2020</h2>\r\n            </div>\r\n            \r\n            <div className=\"container\">\r\n                <div className=\"input-group mb-1 py-5\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\"><i className=\"fas fa-search\"></i></div>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" aria-label=\"Search\" onChange={e => setQuery(e.target.value)} value={query} onKeyPress={search}/>\r\n                </div>\r\n            </div>\r\n            \r\n            {(typeof weather.main !=\"undefined\")? (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"card mb-5\">\r\n                            <div className=\"card-body\">\r\n                                \r\n                                <h3 className=\"card-title font-weight-bold\">{weather.name}, {weather.sys.country}</h3>\r\n                                \r\n                                <p className=\"card-text\"><Moment format=\"MMMM DD, YYYY\">{today}</Moment></p>\r\n                                \r\n                                <div className=\"row mb-4 styleWeather\">\r\n                                    <div className=\"col-md-7\">\r\n                                        <h3 className=\"display-3\">{weather.main.temp}째C</h3>\r\n                                    </div>\r\n                                    <div className=\"col-md-5 text-center\">\r\n                                        <i className={\r\n                                            (typeof weather.main !='undefined')?\r\n                                            ((weather.weather[0].main==='Clear')?\r\n                                            'fas fa-8x fa-sun':\r\n                                            (weather.weather[0].main==='Clouds')?\r\n                                            'fas fa-8x fa-cloud':\r\n                                            (weather.weather[0].main==='Snow')?\r\n                                            'fas fa-8x fa-snowflake':\r\n                                            (weather.weather[0].main==='Thunderstorm')?\r\n                                            'fas fa-8x fa-bolt':\r\n                                            (weather.weather[0].main==='Rain')?\r\n                                            'fas fa-8x fa-cloud-showers-heavy':'fas fa-8x fa-cloud'):''}>\r\n                                        </i>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 weahr\">\r\n                                        <hr/>\r\n                                        <h3 className=\"display-4\">{weather.weather[0].main}</h3>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mb-4\">\r\n                                    <div className=\"col-md-6 text-center\">\r\n                                        <h5><i className=\"fas fa-tint fa-lg text-info pr-2\"></i>{weather.main.humidity}% Humidity</h5>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 text-center\">\r\n                                        <h5><i className=\"fas fa-leaf fa-lg grey-text pr-2\"></i>{weather.wind.speed} Winds</h5>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <table className=\"table table-striped table-dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan=\"2\" className=\"text-center\">More information of the weather</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th scope=\"row\">Time</th>\r\n                                <td><Moment format=\"HH:mm a\">{today}</Moment></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">Latitude</th>\r\n                                <td>{weather.coord.lat}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">Longitude</th>\r\n                                <td>{weather.coord.lon}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">Feels like</th>\r\n                                <td>{weather.main.feels_like}째C</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">Temperature Minimum</th>\r\n                                <td>{weather.main.temp_min}째C</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">Temperature Maximum</th>\r\n                                <td>{weather.main.temp_max}째C</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">Clouds</th>\r\n                                <td>{weather.clouds.all} %</td>\r\n                            </tr>\r\n                        </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            \r\n            </div>):('')}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherApp;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WeatherApp from './weatherApp/weather';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <WeatherApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}